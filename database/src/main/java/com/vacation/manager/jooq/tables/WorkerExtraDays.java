/*
 * This file is generated by jOOQ.
 */
package com.vacation.manager.jooq.tables;


import com.vacation.manager.jooq.Company;
import com.vacation.manager.jooq.Keys;
import com.vacation.manager.jooq.tables.records.WorkerExtraDaysRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkerExtraDays extends TableImpl<WorkerExtraDaysRecord> {

    private static final long serialVersionUID = -1674497532;

    /**
     * The reference instance of <code>company.worker_extra_days</code>
     */
    public static final WorkerExtraDays WORKER_EXTRA_DAYS = new WorkerExtraDays();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkerExtraDaysRecord> getRecordType() {
        return WorkerExtraDaysRecord.class;
    }

    /**
     * The column <code>company.worker_extra_days.id</code>.
     */
    public final TableField<WorkerExtraDaysRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('company.worker_extra_days_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>company.worker_extra_days.seniority</code>.
     */
    public final TableField<WorkerExtraDaysRecord, Integer> SENIORITY = createField(DSL.name("seniority"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>company.worker_extra_days.extra_days</code>.
     */
    public final TableField<WorkerExtraDaysRecord, Integer> EXTRA_DAYS = createField(DSL.name("extra_days"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>company.worker_extra_days.annual_extra_days</code>.
     */
    public final TableField<WorkerExtraDaysRecord, Integer> ANNUAL_EXTRA_DAYS = createField(DSL.name("annual_extra_days"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>company.worker_extra_days.transitive_days</code>.
     */
    public final TableField<WorkerExtraDaysRecord, Integer> TRANSITIVE_DAYS = createField(DSL.name("transitive_days"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>company.worker_extra_days</code> table reference
     */
    public WorkerExtraDays() {
        this(DSL.name("worker_extra_days"), null);
    }

    /**
     * Create an aliased <code>company.worker_extra_days</code> table reference
     */
    public WorkerExtraDays(String alias) {
        this(DSL.name(alias), WORKER_EXTRA_DAYS);
    }

    /**
     * Create an aliased <code>company.worker_extra_days</code> table reference
     */
    public WorkerExtraDays(Name alias) {
        this(alias, WORKER_EXTRA_DAYS);
    }

    private WorkerExtraDays(Name alias, Table<WorkerExtraDaysRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkerExtraDays(Name alias, Table<WorkerExtraDaysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> WorkerExtraDays(Table<O> child, ForeignKey<O, WorkerExtraDaysRecord> key) {
        super(child, key, WORKER_EXTRA_DAYS);
    }

    @Override
    public Schema getSchema() {
        return Company.COMPANY;
    }

    @Override
    public Identity<WorkerExtraDaysRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WORKER_EXTRA_DAYS;
    }

    @Override
    public UniqueKey<WorkerExtraDaysRecord> getPrimaryKey() {
        return Keys.WORKER_EXTRA_DAYS_PKEY;
    }

    @Override
    public List<UniqueKey<WorkerExtraDaysRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkerExtraDaysRecord>>asList(Keys.WORKER_EXTRA_DAYS_PKEY);
    }

    @Override
    public WorkerExtraDays as(String alias) {
        return new WorkerExtraDays(DSL.name(alias), this);
    }

    @Override
    public WorkerExtraDays as(Name alias) {
        return new WorkerExtraDays(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkerExtraDays rename(String name) {
        return new WorkerExtraDays(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkerExtraDays rename(Name name) {
        return new WorkerExtraDays(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
